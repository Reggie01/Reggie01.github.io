<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jedawan | A journey to JS jedi</title>
    <description>Solving problems and working on projects in FreeCodeCamp
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 11 Mar 2017 16:58:21 -0500</pubDate>
    <lastBuildDate>Sat, 11 Mar 2017 16:58:21 -0500</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Build A Random Quote Machine</title>
        <description>&lt;h1 id=&quot;build-a-random-quote-machine&quot;&gt;Build A Random Quote Machine&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do you ever feel like pushing a button to find hope, gain inspiration, or direction in life. Today is your lucky day we’re discussing building a quote machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;current-mission&quot;&gt;Current Mission&lt;/h2&gt;
&lt;p&gt;The random quote machine project is from fcc, Free Code Camp, intermediate front end development projects. There are two user stories. First, user can click a button to show a new random quote. Second, user can press a button to tweet out a quote. Additional details about the project can be found on &lt;a href=&quot;https://www.freecodecamp.com/challenges/build-a-random-quote-machine&quot;&gt;fcc&lt;/a&gt; website.
—-&lt;/p&gt;

&lt;h3 id=&quot;where-should-i-get-quotes&quot;&gt;Where should I get quotes?&lt;/h3&gt;
&lt;p&gt;There are two options for quotes, create and find your own quotes or use an api. Two beginner friendly quote apis I found were [quotesondesign](https://quotesondesign.com/ and &lt;a href=&quot;http://forismatic.com/en/&quot;&gt;forismatic&lt;/a&gt;
You can search google or ask in the fcc chatroom for more quote api choices. I chose the &lt;a href=&quot;http://forismatic.com/en/api/&quot;&gt;forismatic&lt;/a&gt; api because the documentation was easy to understand.&lt;/p&gt;

&lt;h3 id=&quot;how-do-i-make-calls-to-an-api&quot;&gt;How do I make calls to an API?&lt;/h3&gt;
&lt;p&gt;This is the most asked question in fcc chatrooms about this particular project. You can use ajax to make http request to retrieve data from a server. I suggest using jquery to make &lt;a href=&quot;http://api.jquery.com/jquery.ajax/&quot;&gt;ajax&lt;/a&gt; calls to the API. If you prefer vanilla javascript I suggest MDN, Mozilla Developer Network, article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started&quot;&gt;“Getting Started”&lt;/a&gt;. Also, &lt;a href=&quot;https://www.youtube.com/watch?v=h0ZUpPiV1ac&amp;amp;index=2&amp;amp;list=PL4cUxeGkcC9jAhrjtZ9U93UMIhnCc44MH&quot;&gt;The Net Ninja&lt;/a&gt; youtube video is an easy to understand video on how to use AJAX and vanilla javascript.&lt;/p&gt;

&lt;h3 id=&quot;issues&quot;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;My biggest issue with this application was making my container div expand the length of the screen. The content height was 350px. So my application on a large screen size had extra white space. To correct this I needed to set the html and body height property to 100% in my css.
&lt;code&gt;
    html, body {
        height: 100%;
    }
 &lt;/code&gt;
Now I had a background that would span the height of the viewport.&lt;/li&gt;
  &lt;li&gt;The next minor issue was dealing with smaller screen sizes. Your layout will break on smaller screen sizes. i.e If your content is scrollable on a smaller device height: 100% only covers the viewport. So anything below the initial viewport the layout is broken. Therefore add a min-height to correct this issue.
 For more information read: 
   &lt;a href=&quot;http://webdesign.about.com/od/csstutorials/f/set-css-height-100-percent.htm&quot;&gt;Height: 100%&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implementation:&lt;/p&gt;

&lt;h4 id=&quot;optional-reading-material&quot;&gt;Optional Reading Material&lt;/h4&gt;
&lt;h5 id=&quot;writing-ajax-using-promises&quot;&gt;Writing Ajax using Promises&lt;/h5&gt;

&lt;p&gt;Another article explaining &lt;a href=&quot;http://www.mattboldt.com/css-100-percent-height/&quot;&gt;height&lt;/a&gt; property in css.&lt;/p&gt;

&lt;p&gt;Have A Good Day!!&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/freecodecamp/2017/03/09/quoteMachine.html</link>
        <guid isPermaLink="true">http://localhost:4000/freecodecamp/2017/03/09/quoteMachine.html</guid>
        
        <category>fcc,</category>
        
        <category>js,</category>
        
        <category>zipline,</category>
        
        <category>quotes</category>
        
        
        <category>FreeCodeCamp</category>
        
      </item>
    
      <item>
        <title>Build A Personal Portfolio Webpage</title>
        <description>&lt;h1 id=&quot;build-a-personal-portfolio-webpage&quot;&gt;Build A Personal Portfolio Webpage&lt;/h1&gt;

&lt;p&gt;I finished the first zipline in FreeCodeCamp build a personal portfolio webpage. FreeCodeCamp recently changed their website. This change lead to some ziplines coming earlier in their map, a list of tasks. I was further along in their curriculum but decided to go back and start the ziplines.&lt;/p&gt;

&lt;p&gt;To start go read the instructions for the zipline &lt;a href=&quot;http://freecodecamp.com/challenges/zipline-build-a-personal-portfolio-webpage&quot;&gt;here&lt;/a&gt;. I started the zipline by doing the html first. Then I proceeded to add the styling afterwards. Where to start on the first zipline is one of the most asked questions in FCC. Starting with the html is one way to get the ball rolling along. Specifically, you can try implemting the navbar by reading the &lt;a href=&quot;http://getbootstrap.com/components/#nav&quot;&gt;bootstrap docs&lt;/a&gt;. If your comfortable with css and chrome dev tools you can start &lt;a href=&quot;http://getbootstrap.com/examples/navbar-static-top/&quot;&gt;here&lt;/a&gt; instead and use the Chrome dev tools to look at the nav. Hint: press F12 to bring up the chrome dev tools.&lt;/p&gt;

&lt;p&gt;For design I tried implementing Google’s Material Design. You can read Material design &lt;a href=&quot;https://www.google.com/design/spec/material-design/introduction.html&quot;&gt;docs&lt;/a&gt;. Basic document styles i.e header, footer, etc. I implemented the specs according to material design. For conversion of sp,scalable pixels, I read this &lt;a href=&quot;http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/&quot;&gt;post&lt;/a&gt; by author Sebastian Ekström. Extra information on formatting Bootstrap &lt;a href=&quot;https://bootstrapbay.com/blog/bootstrap-button-styles/&quot;&gt;buttons&lt;/a&gt; can be found at this post.&lt;/p&gt;

&lt;p&gt;The next issue I had was how to display my portfolio. I chose to implement a card design choosen from Google’s material design. Google has a recommended strategy for using cards listed  &lt;a href=&quot;https://www.google.com/design/spec/components/cards.html#cards-usage&quot;&gt;here&lt;/a&gt;. Another issue a lot of people run into implementing the background scroll effect to there site. You can do this by adding &lt;code&gt;background-attachment: fixed;&lt;/code&gt;. w3schools website has good example of this on there &lt;a href=&quot;http://www.w3schools.com/cssref/pr_background-attachment.asp&quot;&gt;website&lt;/a&gt; under the sub-heading More Examples.&lt;/p&gt;

&lt;p&gt;Lastly, building the portfolio site was a nice change of pace from the algorithm problems in FCC. The hardest thing was setting up the initial tags and button styling in css. I spent the rest of my time looking for decent background images. I settled on  &lt;a href=&quot;https://stocksnap.io/&quot;&gt;photos&lt;/a&gt; from stocksnap. The photos there are great to get started with. Just be wary of using really big images. I try to keep my image sizes less than 1.5mb. If your looking for a helpful community to learn javascript I suggest &lt;a href=&quot;http://freecodecamp.com/&quot;&gt;freecodecamp&lt;/a&gt;. Till next time have great day!!&lt;/p&gt;

</description>
        <pubDate>Thu, 02 Mar 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/freecodecamp/2017/03/02/Portfolio.html</link>
        <guid isPermaLink="true">http://localhost:4000/freecodecamp/2017/03/02/Portfolio.html</guid>
        
        <category>fcc,</category>
        
        <category>js,</category>
        
        <category>zipline,</category>
        
        <category>portfolio</category>
        
        
        <category>FreeCodeCamp</category>
        
      </item>
    
      <item>
        <title>First Post</title>
        <description>&lt;h1 id=&quot;first-post&quot;&gt;First Post&lt;/h1&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;what-is-the-key-to-the-universe&quot;&gt;What is the key to the universe?&lt;/h3&gt;
&lt;details&gt;
  &lt;summary&gt;Answer&lt;/summary&gt;
  42 is always the answer.
&lt;/details&gt;
</description>
        <pubDate>Fri, 31 Jul 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/freecodecamp/2015/07/31/FirstPost.html</link>
        <guid isPermaLink="true">http://localhost:4000/freecodecamp/2015/07/31/FirstPost.html</guid>
        
        <category>FreeCodeCamp,</category>
        
        <category>JS,</category>
        
        
        <category>FreeCodeCamp</category>
        
      </item>
    
  </channel>
</rss>
